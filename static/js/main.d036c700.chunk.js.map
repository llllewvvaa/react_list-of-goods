{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","App","state","NONE","this","setState","className","type","cn","onClick","setSortTypeAlpabet","setSortTypeLength","toogleReverse","resetList","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAO7D,OAAIR,EACKC,EAAaQ,UAGfR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAb,4MACEC,MAAQ,CACNZ,SAAUJ,EAASiB,KACnBZ,YAAY,GAHhB,wDAME,WACEa,KAAKC,SAAS,CAAEf,SAAUJ,EAASO,aAPvC,+BAUE,WACEW,KAAKC,SAAS,CAAEf,SAAUJ,EAASY,WAXvC,2BAcE,WACEM,KAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,iBAhBzB,uBAoBE,WACEa,KAAKC,SAAS,CACZf,SAAUJ,EAASiB,KACnBZ,YAAY,MAvBlB,oBA2BE,WAAU,IAAD,OACP,EAAiCa,KAAKF,MAA9BZ,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaJ,EAASO,WAEtCgB,QAAS,WACP,EAAKC,sBART,iCAcA,wBACEH,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaJ,EAASY,SAEtCW,QAAS,WACP,EAAKE,qBART,4BAcA,wBACEJ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAAS,WACP,EAAKG,iBART,sBAeGtB,IAAaJ,EAASiB,MAAQZ,IAE3B,wBACEgB,KAAK,SACLD,UAAU,mBACVG,QAAS,WACP,EAAKI,aAJT,sBAaR,6BAEIzB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CuB,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAhG3B,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d036c700.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  setSortTypeAlpabet() {\n    this.setState({ sortType: SortType.ALPHABET });\n  }\n\n  setSortTypeLength() {\n    this.setState({ sortType: SortType.LENGTH });\n  }\n\n  toogleReverse() {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  resetList() {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  }\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => {\n              this.setSortTypeAlpabet();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.setSortTypeLength();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => {\n              this.toogleReverse();\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger\"\n                  onClick={() => {\n                    this.resetList();\n                  }}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map((good) => {\n                return (\n                  <li key={good} data-cy=\"Good\">\n                    {good}\n                  </li>\n                );\n              })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}